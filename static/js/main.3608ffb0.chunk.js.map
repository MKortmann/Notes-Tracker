{"version":3,"sources":["icons/mk.svg","components/Button.js","config/fbConfig.js","components/Modal.js","components/Navbar.js","components/Input.js","components/ModalEdit.js","components/Item.js","components/Message.js","hoc/WithPaper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyButton","styled","Button","background","border","borderRadius","boxShadow","color","height","margin","marginBottom","button","props","Fragment","onClick","clicked","variant","style","width","endIcon","Icon","listDeleteIconClicked","icon","label","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","shadows","padding","spacing","auth","Firebase","db","firestore","TransitionsModal","classes","React","useState","open","setOpen","handleClose","inputUserEmailValue","setinputUserEmailValue","inputUserEmailValueAccount","setinputUserEmailValueAccount","inputPasswordValue","setInputPasswordValue","token","setToken","submit","e","preventDefault","console","log","signUp","createUserWithEmailAndPassword","then","res","user","uid","localStorage","setItem","JSON","stringify","LogIn","signInWithEmailAndPassword","alert","onAuthStateChanged","email","showInputs","buttonLabel","showAccount","TextField","onChange","target","value","id","placeholder","fullWidth","InputLabelProps","shrink","type","onSubmit","buttonLabel2","signOut","Typography","fontSize","cursor","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","title","description","root","flexGrow","breakpoints","up","marginLeft","ButtonAppBar","userIsOnline","setUserIsOnline","showAllMenus","showNotAllMenus","AppBar","position","Toolbar","src","Mk","alt","Hidden","mdDown","only","lgUp","container","flexWrap","textField","marginRight","Input","initialValue","inputText","setInputText","clickedToEditSubItem","Todo","newStyleBackground","styleBackground","textDecorationLine","deco","clickedAtText","todo","InputTodo","addTodo","inputValue","setInputValue","Grid","item","xs","aria-label","Item","arraySubItems","subItems","setSubItems","useEffect","newSubItem","length","showSubItems","setShowSubItems","arrowDesign","bind","map","index","key","DECO","clickedAtSubItemText","SUBITEM","clickedSubItem","text","addSubItem","selectedItem","PaperSheet","direction","justify","Box","borderColor","component","borderTop","WithPaper","Paper","children","App","state","selectedList","inputListValue","inputItemValue","outputPaperMsg","textDecoSubItem","showModalEdit","modalEditShow","showInputsToogle","addItem","ITEMS","push","ITEM","SUBITEMS","setState","collection","doc","set","addList","LIST","subitem","saveItem","saveList","itemRemove","splice","subItemRemove","itemId","subItemId","setActiveList","lastIdValue","parseInt","slice","removeList","forEach","i","newString","substring","number","saveStateTextOfSubItem","itemIndex","subItemIndex","getItem","get","data","catch","err","message","buttonsListToBeRender","this","formToAddItemsToBeRender","itemsToBeRender","textDeco","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3608ffb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mk.8ab4fec3.svg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\n// <Button variant=\"outlined\" size=\"small\" color=\"primary\" fullWidth endIcon={< CloudUploadIcon />} >\r\n//   Submit\r\n// </Button>\r\n\r\nconst MyButton = styled(Button)({\r\n  background: 'rgba(0,212,255,0.5)',\r\n  border: 0,\r\n  borderRadius: 3,\r\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  color: 'white',\r\n  height: 36,\r\n  \"&:hover\": {\r\n    background: \"rgba(255, 105, 135, .5)\",\r\n  },\r\n  margin: \"5px\",\r\n  marginBottom: \"20px\"\r\n\r\n});\r\n\r\n\r\n\r\nfunction button (props) {\r\n  return (\r\n    <React.Fragment>\r\n      <MyButton onClick={props.clicked} variant=\"contained\" color=\"default\" style={{background: props.color, width: props.width}}  endIcon={<Icon onClick={props.listDeleteIconClicked}>{props.icon}</Icon>} >\r\n        {props.label}\r\n      </MyButton>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default button;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\"\r\n\r\n\r\n// Your web app's Firebase configuration\r\nlet firebaseConfig = {\r\n  apiKey: \"AIzaSyD0H1WVBIhIFBsAPgdxsh9Evzc5R5O3r-k\",\r\n  authDomain: \"notes-tracker-d796b.firebaseapp.com\",\r\n  databaseURL: \"https://notes-tracker-d796b.firebaseio.com\",\r\n  projectId: \"notes-tracker-d796b\",\r\n  // storageBucket: \"notes-tracker-d796b.appspot.com\",\r\n  // messagingSenderId: \"10466260938\",\r\n  // appId: \"1:10466260938:web:d3c9eeb90cb3b8c27ec133\",\r\n  // measurementId: \"G-BJEQKX44B3\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport default firebase;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"./Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Firebase from \"../config/fbConfig\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid rgba(0,212,255,0.5)',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n// make auth and firestore references\r\nexport const auth = Firebase.auth();\r\nexport const db = Firebase.firestore();\r\n\r\nexport default function TransitionsModal(props) {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // THE VALUE WILL BE FILLED WITH THE KEYBOARD INPUT\r\n  // SETTED ON THE RETURN VALUE\r\n  const  [inputUserEmailValue, setinputUserEmailValue] = useState(\"\");\r\n  const  [inputUserEmailValueAccount, setinputUserEmailValueAccount] = useState(\"\");\r\n  const  [inputPasswordValue, setInputPasswordValue] = useState(\"\");\r\n  const  [token, setToken] = useState(null);\r\n\r\n  const submit = e => {\r\n    e.preventDefault();\r\n\r\n    if(!inputUserEmailValue || !inputPasswordValue) {alert(\"Please, add E-Mail and Password!\")}\r\n    else {\r\n      console.log(inputUserEmailValue);\r\n      console.log(inputPasswordValue);\r\n\r\n      if(props.signUp) {\r\n\r\n        auth.createUserWithEmailAndPassword(inputUserEmailValue, inputPasswordValue)\r\n          .then(res => {\r\n\r\n            console.log(\"The user id is:\" + res.user.uid)\r\n            // saving the token of this user to local storage\r\n            localStorage.setItem(\"token\", JSON.stringify(res.user.uid));\r\n            setToken(res.user.uid);\r\n\r\n          }).then((res) => {\r\n            setOpen(false);\r\n            setinputUserEmailValue(\"\");\r\n            setInputPasswordValue(\"\");\r\n          })\r\n\r\n      } else if (props.LogIn) {\r\n        auth.signInWithEmailAndPassword(inputUserEmailValue, inputPasswordValue)\r\n          .then(res => {\r\n            console.log(res);\r\n            console.log(res.user);\r\n            // ALWAYS SETTING IT, so it will update with diff. users!\r\n            // if(localStorage.getItem(\"token\") === null) {\r\n              // saving the token of this user to local storage\r\n              localStorage.setItem(\"token\", JSON.stringify(res.user.uid));\r\n            // }\r\n            setOpen(false);\r\n            setinputUserEmailValue(\"\");\r\n            setInputPasswordValue(\"\");\r\n\r\n            setToken(res.user.uid);\r\n            console.log(`[TOKEN SET]: ${token}`);\r\n\r\n          });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  // LOGOUT\r\n  const handleLogOut = e => {\r\n\r\n\r\n    // LogOut\r\n    auth.signOut()\r\n      .then(() => {\r\n\r\n        console.log(\"user signed out\");\r\n        setOpen(false);\r\n        setinputUserEmailValue(\"\");\r\n        setInputPasswordValue(\"\");\r\n        setToken(null);\r\n        localStorage.setItem(\"token\", null);\r\n        console.log(`[TOKEN SET]: ${token}`);\r\n\r\n\r\n      });\r\n  }\r\n\r\n  // // Listen for auth status changes to get the user info!\r\n  auth.onAuthStateChanged(user => {\r\n    if(user) {\r\n      setinputUserEmailValueAccount(user.email);\r\n      setToken(user.uid);\r\n    }\r\n  });\r\n\r\n  let showInputs = <Button clicked={handleClose} label={props.buttonLabel}></Button>;\r\n\r\n  if (props.showAccount) {\r\n    showInputs = (\r\n      <div>\r\n        <p>Logged: {inputUserEmailValueAccount}</p>\r\n        <p>Token: {token}</p>\r\n        <Button clicked={handleClose} label={props.buttonLabel}></Button>\r\n      </div>);\r\n  }\r\n\r\n  if (props.showInputs) {\r\n    showInputs = (\r\n      <div>\r\n        <TextField\r\n          onChange={e => setinputUserEmailValue(e.target.value)}\r\n          id=\"standard-full-width\"\r\n          label={\"Email address\"}\r\n          placeholder={\"Add Your Email Address\"}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={inputUserEmailValue}\r\n        />\r\n        <TextField\r\n          onChange={e => setInputPasswordValue(e.target.value)}\r\n          id=\"standard-full-width\"\r\n          label={\"Your Password\"}\r\n          placeholder={\"Add Your Password\"}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={inputPasswordValue}\r\n          type=\"password\"\r\n        />\r\n        <Button onSubmit={submit} color={\"red\"} clicked={submit} label={props.buttonLabel2}></Button>\r\n        <Button clicked={handleClose} label={props.buttonLabel}></Button>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if (props.label === \"LogOut\") {\r\n    showInputs = (\r\n      <div>\r\n          <Button clicked={handleClose}  label={props.buttonLabel}></Button>\r\n          <Button clicked={handleLogOut} color={\"red\"} label={props.buttonLabel2}></Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography type=\"button\" style={{margin: \"20px\", fontSize: \"20px\", cursor: \"pointer\"}} onClick={handleOpen}>\r\n        {props.label}\r\n      </Typography>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n              <h2 id=\"transition-modal-title\">{props.title}</h2>\r\n              <p id=\"transition-modal-description\">{props.description}</p>\r\n              {showInputs}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal, { auth } from \"./Modal\";\r\nimport Mk from \"../icons/mk.svg\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: '#1B998B',\r\n    color: \"white\"\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n     marginLeft: \"200px\",\r\n   },\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const [userIsOnline, setUserIsOnline] = useState(false);\r\n\r\n  const showAllMenus = (\r\n    <React.Fragment>\r\n        <Modal showAccount={true} label={\"Account\"} title={\"Account Details\"} description={\"\"} buttonLabel={\"close\"}></Modal>\r\n        <Modal showInputs={false} label={\"LogOut\"} title={\"LogOut\"} description={\"\"} buttonLabel={\"close\"} buttonLabel2={\"LogOut\"}></Modal>\r\n    </React.Fragment>\r\n  );\r\n  const showNotAllMenus = (\r\n      <React.Fragment>\r\n        <Modal LogIn={true} showInputs={true} label={\"LogIn\"} title={\"LogIn\"} description={\"\"} buttonLabel={\"close\"} buttonLabel2={\"LogIn\"}></Modal>\r\n        <Modal signUp={true} showInputs={true} label={\"SignUp\"} title={\"SignUp\"} description={\"\"} buttonLabel={\"close\"} buttonLabel2={\"SignUp\"}></Modal>\r\n      </React.Fragment>\r\n    );\r\n\r\n  // Listen for auth status changes\r\n  auth.onAuthStateChanged(user => {\r\n    if(user) {\r\n      console.log(\"The user is online\")\r\n      setUserIsOnline(true);\r\n\r\n    } else {\r\n      console.log(\"The user is offline\")\r\n      setUserIsOnline(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <img src={Mk} alt=\"MK-Logo\" />\r\n            <Hidden mdDown>\r\n              <Typography variant=\"h4\" only={\"md\", \"xl\"} className={classes.title}>\r\n                  Notes Tracker App\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden lgUp>\r\n            <Typography variant=\"h6\" only={\"mdDown\"}  className={classes.title}>\r\n              Notes Tracker\r\n            </Typography>\r\n            </Hidden>\r\n          {userIsOnline ? showAllMenus : showNotAllMenus}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  margin: \"15px\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n\r\n}));\r\n\r\nexport default function Input(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TextField\r\n        onChange={props.onChange}\r\n        id=\"standard-full-width\"\r\n        label={props.label}\r\n        style={{ margin: 4 }}\r\n        placeholder={props.label}\r\n        fullWidth\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        value={props.value}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport Input from \"./Input\";\r\nimport Button from \"./Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [inputText, setInputText] = useState(props.initialValue);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const editTextAndCloseModal = () => {\r\n    props.clickedToEditSubItem(inputText);\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <EditIcon fontSize=\"large\" onClick={handleOpen}  style={{cursor: \"pointer\"}}/>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Please, insert a new value for this subitem!</h2>\r\n            <Input\r\n              label={\"Add A New SubItem Value\"}\r\n              placeholder={\"Add A New SubItem Value\"}\r\n              onChange={e => setInputText(e.target.value)}\r\n              value={inputText}\r\n              >\r\n              </Input>\r\n            <Button label=\"Edit\" color={\"red\"} clicked={editTextAndCloseModal}></Button>\r\n            <Button label=\"Back\" clicked={handleClose}></Button>\r\n\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\n\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Fab from '@material-ui/core/Fab';\r\n// import AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ModalEdit from \"./ModalEdit\";\r\n\r\n\r\n\r\n/* IN THIS CASE TO IMPROVE THE READABILITY I ADDING THREE COMPONENTS IN THIS FILE\r\nWE HAVE THREE COMPONENTS:\r\n1) Todo (stateless component): only return the subitems that are the Todos\r\n2) InputTodo (statefull component): here we have state, by each keyboard pressed key, it add the\r\nvalue to the inputValue. This value is passed to the COMPONENT ITEMS than passed\r\nto the container in APP.js\r\n3) ITEM (statefull component): Encloses the component Todo and InputTodo\r\n*/\r\n\r\n// COMPONENT TODO THAT RETURNS THE TODO=SUBITEM\r\n// using direct destructuring in the func argument.\r\nfunction Todo(props) {\r\n\r\n let newStyleBackground = (props.styleBackground === \"#47BCB8\" ) ? '#FFC6CE' : \"white\"\r\n\r\n // const [strike, setStrike] = useState(false);\r\n\r\n // let deco = strike ? 'line-through' : null;\r\n\r\n // const clicked = () => {\r\n //   strike ? setStrike(false) : setStrike(true);\r\n // }\r\n\r\n  return (\r\n    <div style={{background: newStyleBackground, margin: \"8px\", textDecorationLine: props.deco, cursor: \"pointer\"}}>\r\n      <Typography onClick={props.clickedAtText}>{props.todo}</Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\n// COMPONENT INPUT THAT ALLOWS US TO ADD TODOS\r\nfunction InputTodo({addTodo}) {\r\n  // THE VALUE WILL BE FILLED WITH THE KEYBOARD INPUT\r\n  // SETTED ON THE RETURN VALUE\r\n  const  [inputValue, setInputValue] = useState(\"\");\r\n  console.log(`the inputValue is: ${inputValue}`);\r\n  const submit = e => {\r\n    e.preventDefault();\r\n    if(!inputValue) return;\r\n    addTodo(inputValue);\r\n    setInputValue(\"\");\r\n  }\r\n\r\n  return (\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <form onSubmit={submit}>\r\n            <TextField\r\n              id=\"standard-full-width\"\r\n              onChange={e => setInputValue(e.target.value)}\r\n              label={\"Add Your SubItem\"}\r\n              style={{ margin: 8 }}\r\n              placeholder={\"Add Your SubItem\"}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={inputValue}\r\n            />\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Icon onClick={submit} style={{cursor: \"pointer\", fontSize: 40}} color=\"secondary\" aria-label=\"add\">add_circle</Icon>\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n}\r\n\r\n// MAIN COMPONENT!\r\nconst Item = (props) => {\r\n\r\n  // we load the data always from the container at App.js\r\n  // the data loaded is stored in subItems\r\n  const [subItems, setSubItems] = useState([...props.arraySubItems]);\r\n\r\n  const addTodo = text => {\r\n    const newSubItem = [...props.arraySubItems, text];\r\n    setSubItems(newSubItem);\r\n    // add the new SUBITEM to the specific ITEM in the container at APP.js!\r\n    props.addSubItem(text, props.selectedItem);\r\n    console.log(props.arraySubItems);\r\n  }\r\n\r\n  // THE USE EFFECT WILL BE TRIGERRED ONLY IF YOU CHANGE THE SELECTED LIST:\r\n  // THIS MEANS ONLY IF YOU SELECTED THE SPECIFIC BUTTON SETTED THROUGH:\r\n  // [props.label.name]\r\n  useEffect( () => {\r\n    console.log(`USE EFFECT TRIGGERED`);\r\n    const newSubItem = [...props.arraySubItems];\r\n    setSubItems(newSubItem);\r\n  }, [props.label])\r\n\r\n  // ONLY RE-RENDER IF THE NUMBER OF SUBITEMS CHANGED: used to delete subitems and\r\n  // rerender it!!!\r\n  useEffect( () => {\r\n    console.log(`USE EFFECT TRIGGERED`);\r\n    const newSubItem = [...props.arraySubItems];\r\n    setSubItems(newSubItem);\r\n  }, [props.arraySubItems.length])\r\n\r\n  // we load the data always from the container at App.js\r\n  // the data loaded is stored in subItems\r\n  const [showSubItems, setShowSubItems] = useState(false);\r\n\r\n  let arrowDesign = showSubItems ? \"keyboard_arrow_up\" : \"keyboard_arrow_down\";\r\n\r\n  // const itemClicked = () => {}\r\n\r\n  return (\r\n    <Grid container >\r\n      <Grid item xs={8}>\r\n        <Typography style={{fontSize: \"25px\", cursor: \"pointer\"}} onClick={e => setShowSubItems(!showSubItems)}>{props.label}</Typography>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <Icon onClick={e => setShowSubItems(!showSubItems)} style={{cursor: \"pointer\", fontSize: \"40px\"}}>{arrowDesign}</Icon>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <DeleteOutlinedIcon onClick={props.clicked.bind(this, props.id)} style={{cursor: \"pointer\", fontSize: \"40px\"}} id={props.id}/>\r\n      </Grid>\r\n      {showSubItems ?\r\n        <React.Fragment>\r\n        {subItems.map((todo, index) => (\r\n          <Grid container key={index}>\r\n            <Grid item xs={2}>\r\n              {todo.DECO === \"line-through\" ? <DoneAllIcon fontSize=\"large\" onClick={props.clickedAtSubItemText.bind(this, index)} style={{cursor: \"pointer\"}}/> :\r\n              <DoneIcon fontSize=\"large\" onClick={props.clickedAtSubItemText.bind(this, index)} style={{cursor: \"pointer\"}}/> }\r\n            </Grid>\r\n              <Grid item xs={6}>\r\n                <Todo\r\n                  index={index}\r\n                  todo={todo.SUBITEM}\r\n                  styleBackground={props.styleBackground}\r\n                  clickedAtText={props.clickedAtSubItemText.bind(this, index)}\r\n                  deco={todo.DECO}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={2}>\r\n                <ModalEdit initialValue={todo.SUBITEM} clickedToEditSubItem={props.clickedToEditSubItem.bind(this, index)}></ModalEdit>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <HighlightOffIcon fontSize=\"large\" onClick={props.clickedSubItem.bind(this, index)} style={{cursor: \"pointer\"}}/>\r\n              </Grid>\r\n          </Grid>\r\n        ))}\r\n        <InputTodo addTodo={addTodo}/>\r\n        </React.Fragment>\r\n    : null }\r\n    </Grid>\r\n\r\n  )\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function PaperSheet() {\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      <Grid item xs={11}>\r\n        <Box border={1} style={{borderColor: \"#379B98\"}}>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n              Welcome to Notes Tracker\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              Please, LogIn/SignUp to be able to store and retrieve your data.\r\n            </Typography>\r\n          <Box borderTop={1} style={{borderColor: \"#379B98\"}}>\r\n              <Typography component=\"p\">\r\n                You are in test mode! All your notes are temporarily saved.\r\n              </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// USED TO MAKE A PAPER STYLE FOR ITEMS\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    // padding: theme.spacing(3, 2),\r\n    padding: theme.spacing(1, 1,1,1),\r\n    // margin: \"10px\",\r\n    margin: \"5px\",\r\n    marginLeft: \"5px\",\r\n    marginRight: \"5px\",\r\n    color: \"black\",\r\n    borderColor: 'text.primary'\r\n  },\r\n}));\r\n\r\nexport default function WithPaper(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root} style={{background: props.background}}>\r\n        {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport Item from \"./components/Item\";\nimport { db, auth } from \"./components/Modal\";\nimport MessageWelcome from \"./components/Message\";\n// import Card from '@material-ui/core/Card';\n// import CardContent from '@material-ui/core/CardContent';\nimport 'typeface-roboto';\n// import the wrapper component to make \"the paper like style\"\nimport WithPaper from \"./hoc/WithPaper\";\nimport Icon from '@material-ui/core/Icon';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nclass App extends Component {\n\n// container: we have here a container that store all the list + items and the respective subitems\n// selectedList and SelectedItem: help to track which list and item we have seletected!\n// inputListValue and inputItemValue get the input of the keyboard to store the value in the container\n  state = {\n    container:\n      [ // TREE CONTAINER STORE: THE FIXED KEYS HAVE UPPER-CASE (trying to make it understandable)\n        // {\n        // LIST: \"List1\", ITEMS: [\n                              // {\n                                    // ITEM: \"item\", SUBITEMS: []\n                              // }\n                            // ]\n        // }\n      ],\n    selectedList: 0,\n    inputListValue: \"\",\n    inputItemValue: \"\",\n    outputPaperMsg: null,\n    token: null,\n    textDecoSubItem: null,\n    showModalEdit: null,\n    modalEditShow: false,\n    showInputsToogle: false\n\n  }\n\n  componentDidMount() {\n    // Each user has a token created in the moment of the SignUP!\n    // this token is used to identify the user in firebase! So we can save and\n    // retrieve data for this specific user.\n    let token = null;\n    // get data from firebase\n    auth.onAuthStateChanged( user => {\n      // retrieving specific data from this user: the user should be auth and has a token\n      if(localStorage.getItem(\"token\") !== null && user) {\n\n        token = localStorage.getItem(\"token\");\n        this.setState({\n          token: token\n        })\n\n        // GET DATA FROM A SPECIFIC COLLECTION\n        let collection = db.collection(\"containers\").doc(token);\n\n        collection.get().then( doc => {\n          console.log(\"Document data:\", doc.data());\n\n          this.setState({\n            container: doc.data().container,\n            outputPaperMsg: null\n          })\n    })\n    .catch(err => {\n      console.log(`The user has no data ${err.message}`);\n      // used to clear state: when user logOut\n      this.setState({\n        container: [],\n        outputPaperMsg: null\n      })\n    })\n\n  } else {\n    // used to clear state: when user logOut\n    this.setState({\n      container: [],\n      outputPaperMsg: <MessageWelcome />\n    })\n  }\n  })\n\n}\n\n// ADD:  add a new ITEM to the items array in the respectived selectedList\n  addItem = (e) => {\n    e.preventDefault();\n    const container = [...this.state.container];\n    container[this.state.selectedList].ITEMS.push({ITEM: this.state.inputItemValue, SUBITEMS: []});\n    this.setState({\n      container: container,\n      inputItemValue: \"\"\n    })\n\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        db.collection(\"containers\").doc(this.state.token).set({\n          container: container\n        })\n        .then(() => {\n          console.log(\"ITEM ADDED!\");\n        })\n      }\n    });\n\n  }\n// ADD: a new LIST to the container!\n  addList = (e) => {\n    e.preventDefault();\n    const container = [...this.state.container];\n    const id = container.length + 1;\n    container.push( {LIST: `${this.state.inputListValue}-${id}`, ITEMS: [  ] } );\n    this.setState({\n      container: container,\n      inputListValue: \"\"\n    })\n\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        // sending data to firebase: the user should has a token\n        if (this.state.token !== null) {\n          // saving also to Firebase Database\n          db.collection(\"containers\").doc(this.state.token).set({\n            container: container\n          })\n            .then(() => {\n              console.log(\"LIST ADDED!\");\n            })\n        }\n      }\n    });\n\n  }\n  // ADD the SUBITEM to the items array\n  addSubItem = (subitem, selectedItem) => {\n    const container = [...this.state.container];\n    // container[this.state.selectedList].ITEMS[selectedItem].SUBITEMS.push(subitem);\n    container[this.state.selectedList].ITEMS[selectedItem].SUBITEMS.push({SUBITEM: subitem, DECO: null});\n    this.setState({\n      container: container,\n      inputItemValue: \"\"\n    })\n\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        // sending data to firebase: the user should has a token\n        if (this.state.token !== null) {\n          // saving also to Firebase Database\n          db.collection(\"containers\").doc(this.state.token).set({\n            container: container\n          })\n          .then(() => {\n            console.log(\"SUBITEM ADDED!\");\n          })\n        }\n      }\n    });\n\n\n  }\n// To save item name at each keyboard input at the state\n  saveItem = (e) => {\n    this.setState({inputItemValue: e.target.value});\n  }\n// To save list name at each keyboard input at the state\n  saveList = (e) => {\n    this.setState({inputListValue: e.target.value});\n  }\n  // REMOVE ITEMS\n  itemRemove = (id) => {\n    let container = [...this.state.container];\n    container[this.state.selectedList].ITEMS.splice(id, 1);\n    this.setState({\n      container: container\n    })\n\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        // sending data to firebase: the user should has a token\n        if (this.state.token !== null) {\n          // saving also to Firebase Database\n          db.collection(\"containers\").doc(this.state.token).set({\n            container: container\n          })\n          .then(() => {\n            console.log(\"ITEM removed!\");\n          })\n        }\n      }\n    });\n\n\n  }\n  // REMOVE SUBITEMS\n  subItemRemove = (itemId, subItemId) => {\n    let container = [...this.state.container];\n    container[this.state.selectedList].ITEMS[itemId].SUBITEMS.splice(subItemId, 1);\n    this.setState({\n      container: container\n    })\n\n\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        // sending data to firebase: the user should has a token\n        if (this.state.token !== null) {\n          // saving also to Firebase Database\n          db.collection(\"containers\").doc(this.state.token).set({\n            container: container\n          })\n          .then(() => {\n            console.log(\"subitem removed!\");\n          })\n        }\n      }\n    });\n\n\n\n  }\n  // SET THE ACTIVE LIST TO BE DISPLAYED\n  setActiveList = (id) => {\n    // we will get here the last value of the string that correspond to the id number\n    // used to select the active item in the items.\n    const lastIdValue = parseInt(id.slice(-1))-1;\n    this.setState({\n      selectedList: lastIdValue\n    })\n  }\n\n  // DELETE the LIST\n  removeList = (id) => {\n    const container = [...this.state.container];\n    // here we check for the exactly name that is the key(id)\n    container.forEach( (i, index) => {\n      if(i.LIST === id) {\n        container.splice(index, 1);\n      }\n    })\n    // AFTER DELETING A LIST WE HAVE TO REORDERING IT\n    container.forEach( (id, index) => {\n      const newString = id.LIST.substring(0, id.LIST.length -1);\n      const number = index + 1;\n      id.LIST = newString + number;\n    })\n    this.setState({\n      container: container,\n    })\n\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        // sending data to firebase: the user should has a token\n        if (this.state.token !== null) {\n          // saving also to Firebase Database\n          db.collection(\"containers\").doc(this.state.token).set({\n            container: container\n          })\n          .then(() => {\n            console.log(\"list removed!\");\n          })\n        }\n      }\n    });\n  }\n\n  // as soon as you clicked in the subitem, it will make a line-through is, if there is\n  // already a line-through, it will remove it.\n  saveStateTextOfSubItem = (itemIndex, subItemIndex) => {\n\n    console.log(`[CLICKED AT SUBITEM]: ${subItemIndex}`);\n    console.log(`[SELECTED LIST]: ${this.state.selectedList}`);\n    console.log(`[SELECTED ITEM]: ${itemIndex}`);\n\n    const container = [...this.state.container];\n\n    if(container[this.state.selectedList].ITEMS[itemIndex].SUBITEMS[subItemIndex].DECO  === null) {\n      container[this.state.selectedList].ITEMS[itemIndex].SUBITEMS[subItemIndex].DECO = \"line-through\";\n    } else {\n      container[this.state.selectedList].ITEMS[itemIndex].SUBITEMS[subItemIndex].DECO = null;\n    }\n\n    this.setState({\n      container: container,\n      inputItemValue: \"\"\n    })\n    //\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        // sending data to firebase: the user should has a token\n        if (this.state.token !== null) {\n          // saving also to Firebase Database\n          db.collection(\"containers\").doc(this.state.token).set({\n            container: container\n          })\n          .then(() => {\n            console.log(\"SUBITEM EDITED DECO!\");\n          })\n        }\n      }\n    });\n\n  }\n\n  clickedToEditSubItem = (itemIndex, subItemIndex, inputText) => {\n    console.log(`[CLICKED AT SUBITEM]: ${subItemIndex}`);\n    console.log(`[SELECTED LIST]: ${this.state.selectedList}`);\n    console.log(`[SELECTED ITEM]: ${itemIndex}`);\n    console.log(`[INPUT TEXT]: ${inputText}`);\n\n    const container = [...this.state.container];\n\n\n    container[this.state.selectedList].ITEMS[itemIndex].SUBITEMS[subItemIndex].SUBITEM = inputText;\n\n\n    this.setState({\n      container: container,\n      inputItemValue: \"\"\n    })\n    //\n    // only contact firebase if the user is logged\n    auth.onAuthStateChanged( user => {\n      if (user) {\n        // sending data to firebase: the user should has a token\n        if (this.state.token !== null) {\n          // saving also to Firebase Database\n          db.collection(\"containers\").doc(this.state.token).set({\n            container: container\n          })\n          .then(() => {\n            console.log(\"SUBITEM EDITED TEXT!\");\n          })\n        }\n      }\n    });\n\n  }\n\n  render () {\n\n  // RENDER THE LIST OF BUTTONS\n  let buttonsListToBeRender = null;\n  if (this.state.container.length !== 0) {\n  buttonsListToBeRender =  (\n      this.state.container.map((i, index) => {\n        if(this.state.selectedList === index) {\n          return (\n            <Button\n              key={i.LIST}\n              label={i.LIST}\n              clicked={this.setActiveList.bind(this, i.LIST)}\n              icon={\"delete\"}\n              listDeleteIconClicked={this.removeList.bind(this, i.LIST)}\n              color={\"red\"}\n\n              />\n          )\n        } else {\n          return (\n            <Button\n              key={i.LIST}\n              label={i.LIST}\n              clicked={this.setActiveList.bind(this, i.LIST)}\n              icon={\"delete\"}\n              listDeleteIconClicked={this.removeList.bind(this, i.LIST)}\n              />\n          )\n        }\n      })\n    )\n  }\n\n  // FORM THAT WILL ALLOW US TO ADD ITEMS\n  let formToAddItemsToBeRender = null;\n  if (this.state.container.length !== 0) {\n    formToAddItemsToBeRender = (\n        <React.Fragment>\n          {buttonsListToBeRender}\n            <Grid item>\n              <form onSubmit={this.addItem}>\n                <Input label={\"Please, add your item\"} onChange={this.saveItem} value={this.state.inputItemValue}/>\n              </form>\n            </Grid>\n            <Grid item>\n              <Button width={\"60%\"} label={\"Submit\"} color={\"#379B98\"} clicked={this.addItem} icon={\"send\"}/>\n            </Grid>\n        </React.Fragment>\n    )\n  }\n  // RENDER THE LIST OF ITEMS\n  let itemsToBeRender = null;\n  // render only if the list has items\n  if (this.state.container[this.state.selectedList]) {\n  itemsToBeRender =  (\n      this.state.container[this.state.selectedList].ITEMS.map((i, index) => {\n        let styleBackground = null;\n        // styleBackground = (index%2 === 0 ) ? 'rgba(0,212,255,0.5)' : \"#C0F2FC\"\n        styleBackground = (index%2 === 0 ) ? '#47BCB8' : \"#C0F2FC\"\n        // styleBackground = (index%2 === 0 ) ? 'rgba(0,212,255,0.5)' : \"white\"\n        return (\n          <WithPaper key={index}  background={styleBackground}>\n            <Item label={i.ITEM} selectedItem={index}\n              arraySubItems={this.state.container[this.state.selectedList].ITEMS[index].SUBITEMS}\n              addSubItem={this.addSubItem} clickedSubItem={this.subItemRemove.bind(this, index)}\n              styleBackground={styleBackground}\n              clicked={this.itemRemove.bind(this, index)}\n              id={index}\n              clickedAtSubItemText={this.saveStateTextOfSubItem.bind(this, index)}\n              textDeco={this.state.textDecoSubItem}\n              clickedToEditSubItem={this.clickedToEditSubItem.bind(this, index)}\n              />\n          </WithPaper>\n        )\n      })\n    )\n  }\n\n    return (\n      <div className=\"App\">\n        <Grid className=\"App\" container justify=\"center\" alignItems=\"center\">\n          <Navbar />\n          {this.state.showInputsToogle ?\n            <Icon onClick={e => this.setState({showInputsToogle: false})} style={{cursor: \"pointer\", fontSize: \"60px\"}}>{\"keyboard_arrow_down\"}</Icon>\n          : (\n            <React.Fragment>\n              <Icon onClick={e => this.setState({showInputsToogle: true})} style={{cursor: \"pointer\", fontSize: \"60px\"}}>{\"keyboard_arrow_up\"}</Icon>\n              {this.state.outputPaperMsg}\n              <Grid item xs={12}>\n                <Grid item>\n                  <form onSubmit={this.addList}>\n                    <Input label={\"Please, add your list name\"} onChange={this.saveList} value={this.state.inputListValue}/>\n                  </form>\n                </Grid>\n                <Grid item >\n                  <Button width={\"60%\"} label={\"Add List\"} color={\"#379B98\"} clicked={this.addList} icon={\"add\"} />\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n              {formToAddItemsToBeRender}\n              </Grid>\n              </React.Fragment>\n            )\n          }\n          <Grid item xs={12}>\n              {itemsToBeRender}\n          </Grid>\n          {this.state.showModalEdit}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}